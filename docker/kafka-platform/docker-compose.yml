# http://docs.confluent.io/current/cp-docker-images/docs/configuration.html
# https://docs.confluent.io/platform/current/installation/docker/config-reference.html
---
version: '2.1'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    ports:
      - "2181:2181"
    networks:
      - network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
#      ZOOKEEPER_SYNC_LIMIT: 2
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 3

  broker:
    image: confluentinc/cp-kafka:latest
    hostname: broker
    depends_on:
      zookeeper: { condition: service_healthy }
    ports:
      - "9092:9092"
      - "9093:9093"
    networks:
      - network
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_HOST_NAME: broker
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      # https://rmoff.net/2018/08/02/kafka-listeners-explained/
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9093, EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT

      # https://github.com/robcowart/docker_compose_cookbook/blob/master/confluent_kafka_oss/docker-compose.yml
      # Enable auto creation of topic on the server.
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'

#      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
#      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:9092
#      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
#      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
#      CONFLUENT_METRICS_ENABLE: 'true'
#      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
    healthcheck:
      test: ["CMD", "bash", "-c", "unset" , "JMX_PORT" ,";" ,"kafka-topics.sh","--zookeeper","zookeeper:2181","--list"]
      interval: 10s
      timeout: 5s
      retries: 3

# kafka-init-topics:
#   image: confluentinc/cp-kafka:7.2.1
#   volumes:
#      - ./data/message.json:/data/message.json
#   depends_on:
#     - kafka
#   command: "bash -c 'echo Waiting for Kafka to be ready... && \
#              cub kafka-ready -b kafka:29092 1 30 && \
#              kafka-topics --create --topic users --partitions 3 --replication-factor 1 --if-not-exists --bootstrap-server kafka:29092 && \
#              kafka-topics --create --topic messages --partitions 2 --replication-factor 1 --if-not-exists --bootstrap-server kafka:29092 && \
#              kafka-console-producer --bootstrap-server kafka:29092 --topic users < /data/message.json'"

  schema_registry:
    image: confluentinc/cp-schema-registry:latest
    hostname: schema_registry
    depends_on:
      broker: { condition: service_healthy }
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      SCHEMA_REGISTRY_HOST_NAME: schema_registry
#      SCHEMA_REGISTRY_LISTENERS: 'http://schema_registry:8081'
#      SCHEMA_REGISTRY_DEBUG: "true"

#  kafka_rest:
#    image: confluentinc/cp-kafka-rest:latest
#    hostname: kafka_rest
#    depends_on:
#      - zookeeper
#      - schema_registry
#      - broker
#    ports:
#      - "8082:8082"
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_REST_ZOOKEEPER_CONNECT: 'zookeeper:2181'
#      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema_registry:8081'
#      KAFKA_REST_LISTENERS: 'http://kafka_rest:8082'
#      KAFKA_REST_HOST_NAME: 'kafka_rest'
#
#  connect:
#    image: confluentinc/cp-kafka-connect:latest
#    hostname: connect
#    depends_on:
#      - zookeeper
#      - broker
#      - schema_registry
#    ports:
#      - "8083:8083"
#    environment:
#      CONNECT_BOOTSTRAP_SERVERS: 'broker:9092'
#      CONNECT_REST_ADVERTISED_HOST_NAME: connect
#      CONNECT_REST_PORT: 8082
#      CONNECT_GROUP_ID: compose-connect-group
#      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
#      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
#      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
#      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
##      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
#      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema_registry:8081'
#      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
##      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
#      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema_registry:8081'
#      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
#      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
#      CONNECT_ZOOKEEPER_CONNECT: 'zookeeper:2181'

  # https://github.com/provectus/kafka-ui/blob/master/documentation/compose/kafka-ui.yaml
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    depends_on:
      - zookeeper
      - broker
    networks:
      - network
    environment:
      KAFKA_CLUSTERS_0_NAME: broker
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker:9093
      KAFKA_CLUSTERS_0_METRICS_PORT: 9997

networks:
  network:
    driver: bridge
    # To enable IPv6 uncomment below lines
#    driver_opts:
#        com.docker.network.enable_ipv6: "true"
