user nginx;
worker_processes auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
  worker_connections 1024;
}

stream {
  log_format main  '$remote_addr [$time_local] '
                    '$protocol $status $bytes_sent $bytes_received '
                    '$session_time';
  access_log        /var/log/nginx/access.log main;
  error_log         /var/log/nginx/error.log debug;

  # https://docs.nginx.com/nginx/admin-guide/load-balancer/tcp-udp-load-balancer/
  upstream stream_backend {
    server 192.168.1.250:443;
    server 192.168.1.251:443 backup;
    # LOAD BALANCING
    #    server 192.168.0.2:443 weight=5 max_fails=3 fail_timeout=30s;
    #    server 192.168.0.3:443 weight=5 max_fails=3 fail_timeout=30s;
  }

  server {
    listen 443 ssl;
    listen [::]:443 ssl;
    # server_name reverse-proxy-127-0-0-1.nip.io;

    ssl_certificate         /etc/nginx/certs/server.crt;
    ssl_certificate_key     /etc/nginx/certs/server.key;
    ssl_verify_client off;

    # ssl_protocols               TLSv1 TLSv1.1 TLSv1.2;
    # ssl_ciphers                 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    # ssl_prefer_server_ciphers   on;

    #TCP traffic will be forwarded to the "stream_backend" upstream group
    proxy_pass  stream_backend;
    proxy_ssl   on;

    proxy_ssl_verify off;
    # proxy_buffer_size 2048k;
    # proxy_downstream_buffer 2048k;
    # proxy_ssl_certificate         /etc/nginx/certs/server.crt;
    # proxy_ssl_certificate_key     /etc/nginx/certs/server.key;
    # proxy_ssl_protocols           TLSv1 TLSv1.1 TLSv1.2;
    # proxy_ssl_ciphers             HIGH:!aNULL:!MD5;
    # proxy_ssl_trusted_certificate /etc/ssl/certs/trusted_ca_cert.crt;

    #    proxy_connect_timeout 1s;
    #    proxy_timeout 3s;
    #    proxy_buffer_size 16k;

    allow all;
    # IP filtering
    #    allow 192.168.1.1;
    #    deny all;
  }
}
